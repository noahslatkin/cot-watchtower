-- Enable UUIDs
create extension if not exists "pgcrypto";

-- 1) Contracts
create table if not exists public.contracts (
  id uuid primary key default gen_random_uuid(),
  name text not null,
  sector text not null default 'Unknown',
  cftc_code text,
  first_date date,
  last_date date
);

-- 2) Raw weekly COT
create table if not exists public.cot_weekly (
  id bigint generated by default as identity primary key,
  contract_id uuid references public.contracts(id) on delete cascade,
  report_date date not null,
  prod_class text,
  comm_long int,
  comm_short int,
  ls_long int,
  ls_short int,
  ss_long int,
  ss_short int,
  open_interest int,
  unique (contract_id, report_date)
);

-- 3) Derived metrics
create table if not exists public.cot_metrics (
  id bigint generated by default as identity primary key,
  contract_id uuid references public.contracts(id) on delete cascade,
  report_date date not null,
  comm_net int,
  ls_net int,
  ss_net int,
  comm_index numeric(5,2),
  ls_index numeric(5,2),
  ss_index numeric(5,2),
  wow_comm_delta int,
  wow_ls_delta int,
  wow_ss_delta int,
  unique (contract_id, report_date)
);

-- 4) Refresh log
create table if not exists public.refresh_log (
  id bigint generated by default as identity primary key,
  run_at timestamptz default now(),
  rows_inserted int,
  rows_updated int,
  error text
);

-- Latest-week view
create or replace view public.cot_latest as
select *
from cot_metrics
where report_date = (select max(report_date) from cot_metrics);

-- Disable RLS for now (we just need public reads)
alter table public.contracts disable row level security;
alter table public.cot_weekly disable row level security;
alter table public.cot_metrics disable row level security;
alter table public.refresh_log disable row level security;

-- Helpful indexes
create index if not exists idx_weekly_contract_date on public.cot_weekly (contract_id, report_date);
create index if not exists idx_metrics_contract_date on public.cot_metrics (contract_id, report_date);